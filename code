// App.js
import React, { useState } from "react";
import axios from "axios";
import { useFormik } from "formik";
import * as Yup from "yup";

const App = () => {
  const [data, setData] = useState([]);
  const [filteredData, setFilteredData] = useState([]);
  const [noResults, setNoResults] = useState(false);
  
  // Formik initialization with validation schema
  const formik = useFormik({
    initialValues: {
      search: "",
    },
    validationSchema: Yup.object({
      search: Yup.string().required("Search query is required"),
    }),
    onSubmit: async (values) => {
      try {
        const response = await axios.get("https://jsonplaceholder.typicode.com/todos");
        const filtered = response.data.filter(item => 
          item.title.toLowerCase().includes(values.search.toLowerCase())
        );

        if (filtered.length > 0) {
          setFilteredData(filtered);
          setNoResults(false);
        } else {
          setNoResults(true);
          setFilteredData([]);
        }
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    },
  });

  return (
    <div style={{ padding: "20px" }}>
      <h1>Search Todos</h1>
      <form onSubmit={formik.handleSubmit}>
        <div>
          <input
            id="search"
            name="search"
            type="text"
            placeholder="Search Todos"
            onChange={formik.handleChange}
            onBlur={formik.handleBlur}
            value={formik.values.search}
            style={{ padding: "10px", width: "300px" }}
          />
          <button type="submit" style={{ marginLeft: "10px", padding: "10px" }}>
            Search
          </button>
        </div>
        {formik.touched.search && formik.errors.search ? (
          <div style={{ color: "red" }}>{formik.errors.search}</div>
        ) : null}
      </form>

      <div style={{ marginTop: "20px" }}>
        {noResults ? (
          <p>No results found</p>
        ) : (
          <ul>
            {filteredData.map((item) => (
              <li key={item.id}>{item.title}</li>
            ))}
          </ul>
        )}
      </div>
    </div>
  );
};

export default App;